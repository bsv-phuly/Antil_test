{
  "resolvedId": "/home/runner/work/Antil_test/Antil_test/node_modules/class-variance-authority/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map",
      "start": 1709267030916,
      "end": 1709267030918,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709267030918,
      "end": 1709267030918,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709267030919,
      "end": 1709267030919,
      "order": "normal"
    }
  ]
}
